From 1e0b7f358c3ca8a673d38fdebedb58f0b4743135 Mon Sep 17 00:00:00 2001
From: Sasiliyu Adetunji <sasil.adetunji@gmail.com>
Date: Mon, 4 Nov 2019 23:22:33 +0100
Subject: [PATCH] uses JPMC frameworks for displaying

---
 src/App.tsx   | 17 ++++++++++++-----
 src/Graph.tsx | 13 +++++++++++--
 2 files changed, 23 insertions(+), 7 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..597b5ad 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -36,11 +36,18 @@ class App extends Component<{}, IState> {
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
-    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
+    let x = 0
+    // Update the state by creating a new array of data that consists of
+    // Previous data in the state and the new data from server
+    const interval = setInterval(() => {
+          DataStreamer.getData((serverResponds: ServerRespond[]) => {
+          this.setState({ data: [...this.state.data, ...serverResponds] });
+        });
+        x++
+        if (x > 1000) {
+          clearInterval(interval)
+        }
+        }, 100);
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index ec1430e..b19d110 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem  = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -49,6 +49,15 @@ class Graph extends Component<IProps, {}> {
 
       // Add more Perspective configurations here.
       elem.load(this.table);
+      elem.setAttribute('view', 'y_line');
+      elem.setAttribute('column-pivots', '["stock"]');
+      elem.setAttribute('row-pivots', '["timestamp"]');
+      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('aggregates', `{
+        "stock": "distinct count",
+        "top_ask_price": "avg",
+        "top_bid_price": "avg",
+        "timestamp": "distinct count"}`);
     }
   }
 
-- 
2.20.1 (Apple Git-117)

